// Code generated by MockGen. DO NOT EDIT.
// Source: jwt_builder.go

// Package jwt is a generated GoMock package.
package jwt

import (
	reflect "reflect"

	jwt "github.com/dgrijalva/jwt-go"
	gomock "github.com/golang/mock/gomock"
)

// MockJwtBuilder is a mock of JwtBuilder interface.
type MockJwtBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockJwtBuilderMockRecorder
}

// MockJwtBuilderMockRecorder is the mock recorder for MockJwtBuilder.
type MockJwtBuilderMockRecorder struct {
	mock *MockJwtBuilder
}

// NewMockJwtBuilder creates a new mock instance.
func NewMockJwtBuilder(ctrl *gomock.Controller) *MockJwtBuilder {
	mock := &MockJwtBuilder{ctrl: ctrl}
	mock.recorder = &MockJwtBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJwtBuilder) EXPECT() *MockJwtBuilderMockRecorder {
	return m.recorder
}

// GenerateJwt mocks base method.
func (m *MockJwtBuilder) GenerateJwt(claim jwt.Claims) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateJwt", claim)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateJwt indicates an expected call of GenerateJwt.
func (mr *MockJwtBuilderMockRecorder) GenerateJwt(claim interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateJwt", reflect.TypeOf((*MockJwtBuilder)(nil).GenerateJwt), claim)
}
